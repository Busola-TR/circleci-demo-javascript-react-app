# version: 2.1
# workflows: 
#  workflow-1:
#   jobs:
#    - docker-test

# jobs:
#   docker-test:
#    docker:
#     - image: cimg/node:17.2-browsers
#    steps:
#     - checkout
#     - setup_remote_docker:
#         docker_layer_caching: true
#     - run: docker build .
    
version: 2.1

# executors:
#   default-executor:
#     docker:
#       - image: cimg/python:3.8  # This image is a good base for installing additional tools

jobs:
  trivy-scan:
     docker:
      - image: cimg/python:3.8
     steps:
      - checkout # Checks out your source code
      - run:
          name: Update and Install curl, Trivy, and Helm
          command: |
            # Update package lists and install necessary packages
            sudo apt-get update && sudo apt-get install -y curl

            # Install Trivy
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin v0.54.1

            # Install Helm
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | sudo bash
      - run:
          name: Verify Trivy Installation and Scan Files
          command: |
            # Verify Trivy installation
            trivy --version

            # Scan files in the current directory, including Helm charts
            # trivy fs --skip-files=.git,.github,.circleci --ignore-unfixed .
            trivy fs --severity HIGH,CRITICAL --exit-code 1 --ignore-unfixed -o trivy.json . || true
            # Check Trivy scan result
            if [ -s trivy.json ]; then
              echo "Trivy scan results:"
              cat trivy.json
            else
              echo "No vulnerabilities found or an error occurred."
            fi
      - store_artifacts:
          path: trivy.json
          destination: trivy.json
            
  semgrep-full-scan:
    docker:
      - image: semgrep/semgrep
    steps:
      - checkout
      - run:
          name: "Semgrep OSS full scan"
          command: semgrep ci --config p/javascript --output semgrep.json    
      - store_artifacts:
          path: semgrep.json
          destination: semgrep.json

  # gitleaks-scan:
  #   machine:
  #     image: ubuntu-2204:2024.05.1
  #   steps:
  #     - checkout
  #     - run:
  #         name: Pull Gitleaks Docker Image
  #         command: |
  #           docker pull zricethezav/gitleaks:latest
  #     - run:
  #         name: Run Gitleaks Scan
  #         command: |
  #           docker run --rm -v "$PWD":/app zricethezav/gitleaks:latest detect --source /app -f json -r /app/gitleaks.json
  #     - run:
  #         name: Display CI Directory Contents After Gitleaks
  #         command: |
  #           echo "Contents of the project directory (CI_PROJECT_DIR) after Gitleaks run:"
  #           ls -la "$PWD"
  #     - run:
  #         name: Display /app Directory Inside Docker Container
  #         command: |
  #           docker run --rm -v "$PWD":/app zricethezav/gitleaks:latest ls -la /app
  #     - store_artifacts:
  #         path: gitleaks.json
  #         destination: gitleaks.json
  #         when: always
  gitleaks-scan:
    docker:
      - image: zricethezav/gitleaks:latest
    steps:
      - checkout
      - run:
          name: Run Gitleaks Scan
          command:  docker run --rm -v "$PWD":/app zricethezav/gitleaks:latest detect --source /app -f json -r /app/gitleaks.json
      - store_artifacts:
          path: gitleaks.json
          destination: gitleaks.json
      - run:
          name: Allow Failure
          command: echo "Gitleaks job allowed to fail" || true
workflows:
  version: 2
  scan:
    jobs:
      - trivy-scan
      - gitleaks-scan
      - semgrep-full-scan






